---
// import "@fontsource/poppins/100.css";
import "animate.css";
import "../styles/global.css";
import { config } from "@fortawesome/fontawesome-svg-core";
import "@fortawesome/fontawesome-svg-core/styles.css";
import { ViewTransitions } from "astro:transitions";
config.autoAddCss = false;

type Props = {
  title: string;
  description: string;
};
const response = await fetch(`${import.meta.env.WPGRAPHQL_URL}`, {
  method: "POST",
  headers: {
    "content-type": "application/json",
  },
  body: JSON.stringify({
    query: `
		query MetadataQuery {
      cssVariables
      siteLogo {
        sourceUrl
      }
      seo {
        schema {
          companyLogo {
            sourceUrl
          }
        }
      }
    }
		`,
  }),
});
const { data } = await response.json();
const { title, description } = Astro.props;
---

<head>
  <meta charset="utf-8" />
  {
    !!data.seo?.schema?.companyLogo?.sourceUrl && (
      <link rel="icon" href={data.seo.schema.companyLogo.sourceUrl} />
    )
  }
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
  <meta name="description" content={description} />
  {!!data.cssVariables && <style set:html={`:root{${data.cssVariables}}`} />}
  <style>
    @import url("https://fonts.googleapis.com/css2?family=Domine:wght@400..700&family=Inconsolata:wght@200..900&family=New+Amsterdam&display=swap");
  </style>
  <ViewTransitions />

  <script is:inline>
    function startSpinner() {
      const spinner = document.createElement("div");
      spinner.className =
        "fixed inset-0 flex items-center justify-center bg-white bg-opacity-75 z-50";
      spinner.innerHTML =
        '<div class="loader ease-linear rounded-full border-4 border-t-4 border-blue-500 h-12 w-12"></div>';
      document.body.appendChild(spinner);

      return function stop() {
        document.body.removeChild(spinner);
      };
    }

    // Show spinner on first load
    window.addEventListener("DOMContentLoaded", () => {
      console.log("DOMContentLoaded event triggered");
      const stopSpinner = startSpinner();
      window.addEventListener("load", () => {
        console.log("First load completed");
        stopSpinner();
      });
    });

    // Show spinner during view transitions
    document.addEventListener("astro:before-preparation", (ev) => {
      console.log("astro:before-preparation event triggered");
      const originalLoader = ev.loader;
      ev.loader = async function () {
        console.log("Custom loader started");
        const stop = startSpinner();
        await originalLoader();
        stop();
        console.log("Custom loader stopped");
      };
    });
  </script>
</head>
