---
import { Image } from "astro:assets";

const { searchParams, pathname } = Astro.url;
const title = searchParams.get("title");
const category = searchParams.get("category");
const page = searchParams.get("page");
searchParams.delete("page");
const searchParamsString = searchParams.toString();

const response = await fetch(`${Astro.url.origin}/api/posts.json`);
const { posts } = await response.json();

let filteredPosts = posts;

filteredPosts = filteredPosts.filter((post: any) => {
  return post.uri.includes(`${pathname}`);
});

if (title) {
  filteredPosts = filteredPosts.filter((post: any) => {
    return post.title.includes(title);
  });
}

if (category) {
  filteredPosts = filteredPosts.filter((post: any) => {
    return post.uri.includes(`${category}`);
  });
}

const pageSize = 4;
const totalPages = Math.ceil(filteredPosts.length / pageSize);
const pageNumber = page ? (isNaN(parseInt(page)) ? 1 : parseInt(page)) : 1;
const offset = (pageNumber - 1) * pageSize;
filteredPosts = filteredPosts.slice(offset, offset + pageSize);
---

<form method="GET">
  <fieldset class="pb-2 grid grid-cols-1 sm:grid-cols-2 gap-2">
    <div>
      <label><strong>Titulo</strong></label>
      <input
        value={title}
        type="text"
        name="title"
        class="w-full py-1 px-2 border border-event-horizon rounded-sm"
      />
    </div>

    <div>
      <label><strong>Categoría</strong></label>
      <select
        id="category-select"
        name="category"
        class="w-full py-1 px-2 border border-event-horizon rounded-sm"
      >
        <option value="">--Por favor, elija una opción--</option>
        <option value="blog-scout">Blog Scout</option>
        <option value="material-de-apoyo">Material de apoyo</option>
        <option value="memorias-del-clan">Memorias del Clan</option>
        <option value="experiencia-ocelote">Mi experiencia Ocelote</option>
      </select>
    </div>
  </fieldset>
  <button
    type="submit"
    class="w-full text-white inline-block uppercase font-bold tracking-[1.3px] bg-event-horizon py-3 px-6"
  >
    Buscar
  </button>
</form>
<div class="grid gap-2 grid-cols-1">
  {
    filteredPosts.map((post: any) => (
      <a
        href={post.uri}
        class="border flex-none sm:flex border-slate-600 hover:bg-slate-200  bg-slate-100"
      >
        {!!post.featuredImage && (
          <Image
            height={post.featuredImage.node.mediaDetails.height}
            width={post.featuredImage.node.mediaDetails.width}
            src={post.featuredImage.node.sourceUrl}
            alt=""
            class="h-40 md:min-w-60 md:max-w-60 lg:min-w-72 lg:max-w-72 object-cover self-center"
          />
        )}
        <div class="flex-col sm:flex-row p-2">
          <h3
            class="sm:px-2 postCardTitle"
            transition:name={`post-title-${post.databaseId}`}
          >
            <strong>{post.title}</strong>
          </h3>

          <div class="flex sm:px-2 flex-col gap-4">
            <div transition:name={`excerpt-${post.databaseId}`}>
              <div class="text-ellipsis" set:html={post.excerpt} />
            </div>
          </div>
        </div>
      </a>
    ))
  }
</div>
<div class="flex gap-2 justify-center flex-wrap">
  {
    Array.from({ length: totalPages }).map((_, i) => (
      <a
        class={`block px-3 py-2 rounded-md ${
          i + 1 === pageNumber
            ? `bg-event-horizon text-white`
            : `bg-zinc-200 hover:bg-zinc-300`
        }`}
        href={`?${
          searchParamsString
            ? `${searchParamsString}&page=${i + 1}`
            : `page=${i + 1}`
        }`}
      >
        {i + 1}
      </a>
    ))
  }
</div>
